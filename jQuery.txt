JQuery Notes
--------------------------------------------------------------------------------

Fade in and out on mouse hover!

$(document).ready(function() {
    $('div').mouseenter(function() {
        $('div').fadeTo('fast', 1);
    });
    $('div').mouseleave(function() {
        $('div').fadeTo('fast', 0.5);
    });
});

________________________________________

fade in when document.ready

$(document).ready(function() {
    $('div').fadeIn(10000)
});

_________________________________________

make things vanish by clicking a button

$(document).ready(function() {
    $('button').click(function() {
        $('.vanish').fadeOut('slow');
    });
});

_________________________________________

Making circles with CSS

div {
    height: 50px;
    width: 50px;
    border-radius: 100%;
    background-color: #FF9C5B;
    display: inline-block;
}

_________________________________________

if you use an event handler on an element—that's the fancy name for actions like .click() and .mouseenter(), since they handle jQuery events—you can call the actual event that occurs (such as fadeOut()) on $(this)

$(document).ready(function() {
    $('div').click(function() {
        $(this).fadeOut('slow');
    });
});
________________________________________________________________________________

Pull Tab! :)

HTML
<body>
        <div class="panel">
        <br />
        <br />
        <p>Now you see me!</p>
        </div>
        <p class="slide"><div class="pull-me">Slide Up/Down</div></p>
    </body>
CSS
body {
    margin:0 auto;
    padding:0;
    width:200px;
    text-align:center;
}
.pull-me{
    -webkit-box-shadow: 0 0 8px #FFD700;
    -moz-box-shadow: 0 0 8px #FFD700;
    box-shadow: 0 0 8px #FFD700;
    cursor:pointer;
}
.panel {
    background: #ffffbd;
    background-size:90% 90%;
    height:300px;
    display:none;
    font-family:garamond,times-new-roman,serif;
}
.panel p{
    text-align:center;
}
.slide {
    margin:0;
    padding:0;
    border-top:solid 2px #cc0000;
}
.pull-me {
    display:block;
    position:relative;
    right:-25px;
    width:150px;
    height:20px;
    font-family:arial,sans-serif;
    font-size:14px;
    color:#ffffff;
    background:#cc0000;
    text-decoration:none;
    -moz-border-bottom-left-radius:5px;
    -moz-border-bottom-right-radius:5px;
    border-bottom-left-radius:5px;
    border-bottom-right-radius:5px;
}
.pull-me p {
    text-align:center;
}

JQUERY
$(document).ready(function() {
    $('.pull-me').click(function() {
        $('.panel').slideToggle('slow');
    });
});

________________________________________________________________________________

Add a styled class. (#text is an id of the div we're targeting, 'highlighted' is the class to add)

$(document).ready(function() {
    $('#text').click(function() {
        $(this).addClass('highlighted');
    });
});

*or use .toggleClass to toggle the class on and off

________________________________________________________________________________

Change height, width or any css property

$(document).ready(function() {
    var $d = $('div')
    $d.height('200px');
    $d.width('200px');
    $d.css('border-radius', '10px');
});

________________________________________________________________________________

Modifying the content in between the opening and closing html tags. This will change the first 'p' tag content it finds in the document.
This changes what is currently written in the first <p> to "jQuery magic..."

$(document).ready(function() {
    $('p').html("jQuery magic in action!");
});

________________________________________________________________________________

TO-DO List   create a variable that stores the value (val) of the input from the form then append it as a new div

--HTML--
<h2>To Do</h2>
<form name="checkListForm">
	<input type="text" name="checkListItem"/>
</form>
<div id="button">Add!</div>
<br/>
<div class="list"></div>

--jQUERY--
$(document).ready(function() {
    $('#button').click(function() {
        var toAdd = $('input[name=checkListItem]').val();
        $('.list').append("<div class='item'>" + toAdd + "</div>");
    });
});

-----------------------------

...and to remove the added items by clicking them...
"think of .on() as a general handler that takes the event, its selector, and an action as inputs."

$(document).ready(function() {
    $('#button').click(function() {
        var toAdd = $('input[name=checkListItem]').val();
        $('.list').append("<div class='item'>" + toAdd + "</div>");
    });
    $(document).on('click', '.item', function() {
        $(this).remove();
    });
});

________________________________________________________________________________
Adding and Removing a class on mouse hover:
(Two functions separated by a coma) similar to .mouseenter and .mouseleave functions

$(document).ready(function(){
  $('div').hover(function(){
      $(this).addClass('active');
    },
    function(){
      $(this).removeClass('active');
    }
  );
});

________________________________________________________________________________

Change CSS attributes when on 'focus'
(when you click the input box it changes the outline to red. 'outline-style' line is only needed for Firefox browser)
$(document).ready(function() {
    $('input').focus(function() {
        $('input').css('outline-style', 'solid');
        $('input').css('outline-color', '#FF0000');
    });
});

________________________________________________________________________________

.keydown event and .animate (remember that the window containing the div has to be clicked first so it's in focus)

$(document).ready(function() {
    $(document).keydown(function() {
        $('div').animate({left:'+=10px'}, 500);
    });
});

________________________________________________________________________________

Move a 2D image around using the arrow keys!

$(document).ready(function() {
    $(document).keydown(function(key) {
        switch(parseInt(key.which,10)) {
			// Left arrow key pressed
			case 37:
				$('img').animate({left: "-=10px"}, 'fast');
				break;
			// Up Arrow Pressed
			case 38:
				$('img').animate({top: "-=10px"}, 'fast');
				break;
			// Right Arrow Pressed
			case 39:
				$('img').animate({left: "+=10px"},'fast');
				break;
			// Down Arrow Pressed
			case 40:
				$('img').animate({top: "+=10px"},'fast');
				break;
		}
	});
});

________________________________________________________________________________

jQuery UI
--------------------------------------------------------------------------------
Use this library for more awesome animations. (make sure to include in the head of html)
<script src="//ajax.googleapis.com/ajax/libs/jqueryui/1.9.1/jquery-ui.min.js"></script>

Make the div explode!

$(document).ready(function() {
    $('div').click(function() {
        $(this).effect('explode');
    });
});

Make the div bounce!

$(document).ready(function() {
    $('div').click(function() {
        $(this).effect('bounce', {times:3}, 500);
    });
});

Make the div slide into view!

$(document).ready(function() {
    $('div').click(function() {
        $(this).effect('slide');
    });
});

Make an object draggable on the page!

$(document).ready(function() {
    $('#car').draggable();
});

________________________________________________________________________________

.accordian effect to open and close divs inside a div with #menu
HTML
<div id="menu">
            <h3>jQuery</h3>
            <div>
                <p>jQuery is a JavaScript library that makes your websites look absolutely stunning.</p>
            </div>
            <h3>jQuery UI</h3>
            <div>
                <p>jQuery UI includes even more jQuery goodness!</p>
            </div>
            <h3>JavaScript</h3>
            <div>
                <p>JavaScript is a programming language used in web browsers, and it's what powers jQuery and jQuery UI. You can learn about JavaScript in the <a href="http://www.codecademy.com/tracks/javascript" target="blank" style="text-decoration:none; color:#F39814">JavaScript track</a> here on Codecademy.</p>
            </div>
        </div>
jQUERY
$(document).ready(function() {
    $("#menu").accordion({collapsible: true, active: false});
});

________________________________________________________________________________

Make <li>s in and <ol> selectable and change their css when clicked.

HTML
<ol>
    <li>Super Mario Bros.</li>
    <li>Tetris</li>
    <li>Legend of Zelda: Link's Awakening</li>
    <li>Kirby's Dream World</li>
    <li>Burger Time</li>
    <li>Pokémon Red</li>
    <li>Pokémon Blue</li>
</ol>

CSS
ol .ui-selected {
	background: #F39814; color: white;
}

jQUERY
$(document).ready(function() {
    $('ol').selectable();
});

--or make them .sortable (repositionable in the list)

$('ol').sortable();
________________________________________________________________________________




________________________________________________________________________________

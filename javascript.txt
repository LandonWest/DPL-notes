JAVASCRIPT
________________________________________________________________________________
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Javascript is a horrible language but everyone needs to know it.
Built in 10 days by 1 guy

There are a lot of compilers that will let you write ruby code and compile into js

javascript is not OOP, its a Functional language

"hello world" string
1234 number
432.32 number      There is no differentiation between integers and floats
[] array
{} object
// comments in javascript


STRINGS/FUNCTIONS:
______________________________________________
Javascript does Not have string interpolation. But you can do string concatenation.

"1 plus 1 equals " + two

javascript has "functions" which are the same as ruby "methods"

"1 plus 1 equals ".capitalize()    when you call a function you have to put the
                                    parenthesis after it to get the return value.

"jeremy".toUpperCase()   the very first word of the function starts lowercase,
                          the next words are capitalized. This is called
                          'camel-casing', ruby uses 'snake-casing'.

parseInt("1", 10)   the first argument is what you want to convert into the integer,
                    the second argument is base-10 number system.

parseFloat("4.3", 10)

ASSIGNING VARIABLES:
____________________________________________

var name = "Jeremy"      local variables
name = "Jeremy"       global variable (generaly stay away from this)
let name = "Jeremy"      changes the scope of the variable to more like an instance var.

There is no such thing as a Class or Module in javascript, you wont do Class.new

_____________________________________________

whenever you have a complete line of code then you put a semi-colon at the end of
  the line.

var firstName = "Jeremy";
var lastName = "Woertink";
var name = firstName + " " + lastName;

"my name is " + name;

___________________________

javascript run straight in the browser not the terminal

NaN ("not a number")

to figure out what datatype something is, use: typeof x

________________________________________
Two ways to add objects to an array:

names[3] = "Will";

names.push("TY");
________________________________________
Creating an object (hash in ruby):

var dog = {name: 'fluffy', age: 3};

//keys are returned using a string, not a symbol
dog['name']    returns: 'fluffy'

assign a new value to a hash:

dog['breed'] = 'pit bull';


dog.name
"fluffy"
dog.breed
"pit bull"










confirm("Are you sure?");

prompt("What is your name?")


"null" is equivalent to ruby's "nil"


DOM ("document object model")





window.onload = function() {
  var images - document.querySelectorAll('.col img');
}



________________________________________________________________________________
JAVASCRIPT Frameworks
________________________________________________________________________________

jQuery - 'write less, do more' It's fast and light, comes by default in Rails
jQuery mobile - optimized for mobile, structures your markup

prototype - built by rubyists, structured very similar to ruby. It is kinda bulky
            There's an add on called 'animus' that lets you do basic animations

MooTools - really good for heavy animation stuff

YUI - built by yahoo. open source js and css library

ChocolateChip UI - ? Native look for web apps, ios or android


________________________________________________________________________________

window.on_load
document.on_ready

jQuery function = $()

when using jQuery you dont have to say 'on' for events like onclick and onready etc.

ex.

$(document).ready(function() {
  // this runs when the document is ready
  console.log('document now ready');
});



a 'timeout' fires after a certain amount of time

a 'holdoff' will fire then wait a certain amount of time, then fire again


jQuery gives us four functions to take html elements and put them into our website.
-you have to have an html element to start

before - inserts it above
prepend - puts it internally at the top
append - puts it internally at the bottom
after - inserts it below

________________________________________________________________________________

PLUGINS
________________________________________________________________________________

Plugins are like ruby gems. To install, basically just require the .js file
  99% of plugins will be in the doc ready function at the top of your page
  find plugins on Jquery.com


      <script src="jquery.js"></script>
    <script src="jquery.lettering-0.6.1.min.js"></script>
    <script>
      $(function() {
        $('.fancy_title').lettering();
      });
    </script>


Alertify.js - allows you to have nice, pretty alerts
jQuery Avgrund -
iCheck - by default you cannot style checkboxes or radioboxes, the only way you can
          do it is in javascript. iCheck will let you do that easily
Long Press - you can hold down a key and a bar of accented options appears to choose from.
jQuery File Upload -
Complexify - assesses how complex passwords are.
jQuery Knob - make touchable, draggable dials. (look like nest thermostats)
pickadate.js - drop down menus of calendars and dates to pick from.
Chosen - selections fields can't be styled unless you use js. This lets you do it easily.
FancyInput - looks cool when you're typing stuff into search fields etc.
typeahead.js - for autocomplete type stuff. Jeremy uses all the time.
Parsley.js - form format validation
SuperScrolloRamaa - does awesome text animations like bounce, wipe, fling etc.
Cycle2 - does slidesh
FullCalendar - used on beakr and lots of others

________________________________________________________________________________

javascript 'Manifest'    compiles all the script tags into a single file and requires
                          them all at once, instead of doing 30 seperate calls from
                            the main html page, where if one fails, all the script
                              tags below it will fail to load also. Rails also minifies
                                the scripts by default, speeding things up for you.


in rails-

Example:

application.js
_______________________
//= require jquery                    -always comes first
//= require jquery_ujs                -always comes second
//= require bootstrap                 -this is the bootstrap.js file from bootstrap-sass
//= require_self                      -require the file we're in now; always last file


________________________________________________________________________________

AJAX
________________________________________________________________________________
asynchrones javascript and xml

Allows you to make asynchrones transactions within your application.
(one at a time is a synchrones transaction)

you can move the user along without having to wait on processes to finish

without concurrency your website will crash when more than a few people try to access
your page at once, because the load times will be more than 30 seconds

CSS: cascading style sheets

UI/UX

UI- user interface, how the thing looks.
UX- user experience, how easy/difficult the site is to use



* {                          * applies to All elements on page

}
body {

}
#wrap {                      id:wrap

}
.row {                        class:row

}
input[type=text] {

}
ul > li {          applies styles to li elements that are directly within the ul

}
a:hover, a:active, a:focus {         the : lets you define a pseudo class

}
div p.small {          find all p tags that have a class of small inside a div

}

_____________________________________________

div#wrap {
  width: 980px;
  margin: 0 auto;
  border: 1px solid #ff9900;
  padding: 10px;
  box-shadow: 1px 1px 10px #333333;
  background-color: #eeeeee;
  font-size: 16px;
  color: #333333;
  font-family: Helvetica;
}


hex colors: #rrggbb, 0-9, a-f,  all zero's is black, all f's is white, 256 values total.
or
rgb(255, 180, 0)
rgb(255, 180, 0, 0.5)  the last value is the transparency, 0 is totaly transparent, 1 is solid.

________________________________________________________________________________
HMTL Forms
________________________________________________________________________________
A way for users to add text input to a page. The form tells the browser where to
send that data.

You can't put a child form inside a parent form

The form tag requires a couple of attributes to define what it's doing:
1. "action" attribute- tells the browser the url to whre the form will send the data.
2. "method" attribute- the method in which you want the data to be sent. There are
    really only two values you'll ever put in here: GET(from server, like in a
    search form) or POST(send to server, like facebook posts).

Different elements that go inside of a form:
1.<input>   hidden - data not displayed on the webpage
            text - normal input field, single line of text
            password - will automatically put stars or whatever when you type in
            radio - has the little circles that you click to fill in. You can only select one at a time.
            checkbox - has checkboxes, you can select more than one at a time.
            submit - creates a button for you, takes the form data and sends it.
            reset - creates a button that clears out all the data in the form.
2.<select>
3.<textarea> for large text fields
4.<button>

<form action="/url..." method="get">

</form>


In sinatra "params" is the data that gets sent in the form. params have key/value pairs
